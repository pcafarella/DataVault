--==============================================================================
-- DBMS Name        :    SQL Server
-- Procedure Name   :    update_stage_analyti_df7d8924
-- Template         :    wsl_sqlserver_proc_dv_stage_sha256
-- Template Version :    8.5.1.0
-- Description      :    Update the Stage Table table stage_analytical_instrument_national
-- Generated by     :    WhereScape RED Version 8.6.6.1 (build 220216-231917)
-- Generated for    :    Pace Analytical Services
-- Generated on     :    Saturday, August 26, 2023 at 17:06:34
-- Author           :    Paul Cafarella
--==============================================================================
-- Notes / History
--
CREATE PROCEDURE [SCHEMA.update_stage_analyti_df7d8924].update_stage_analyti_df7d8924
  @p_sequence         INTEGER
, @p_job_name         VARCHAR(256)
, @p_task_name        VARCHAR(256)
, @p_job_id           INTEGER
, @p_task_id          INTEGER
, @p_return_msg       VARCHAR(1024) OUTPUT
, @p_status           INTEGER       OUTPUT

AS
  SET XACT_ABORT OFF  -- Turn off auto abort on errors
  SET NOCOUNT ON      -- Turn off row count messages

  --=====================================================
  -- Control variables used in most programs
  --=====================================================
  DECLARE
    @v_msgtext               VARCHAR(1024) -- Text for audit_trail
  , @v_sql                   NVARCHAR(255) -- Text for SQL statements
  , @v_step                  INTEGER       -- return code
  , @v_insert_count          INTEGER       -- no of records inserted
  , @v_return_status         INTEGER       -- Update result status
  , @v_current_datetime      DATETIME      -- Used for date insert

  --=====================================================
  -- General Variables
  --=====================================================


  --=====================================================
  -- MAIN
  --=====================================================
  SET @v_step = 100

  SET @v_insert_count = 0
  SET @v_current_datetime = GETDATE()

  BEGIN TRY

    --=====================================================
    -- Delete existing records
    --=====================================================
    SET @v_step = 200

    SET @v_sql = N'TRUNCATE TABLE [TABLEOWNER].[stage_analytical_instrument_national]';
    EXEC @v_return_status = sp_executesql @v_sql

    --=====================================================
    -- Insert new records
    --=====================================================
    SET @v_step = 300

    BEGIN TRANSACTION

      INSERT INTO [TABLEOWNER].[stage_analytical_instrument_national]
      ( hk_h_analytical_instrument
      , instrument_no
      , instrument_no_bkcc
      , tenant_id
      , certification_req
      , service_status
      , instrument_type
      , instrument_model
      , serial_number
      , description
      , location
      , calib_days
      , calib_desc
      , last_calib
      , next_calib
      , service_days
      , service_desc
      , last_service
      , next_service
      , capacity
      , capacity_samp_test
      , instrument_cost
      , lasttool
      , lastuser
      , lastdate
      , computername
      , datapath
      , raw_data_mode
      , analysis_location_code
      , tzcode
      , dss_change_hash_analytical_instrument_mroc_national
      , dss_record_source
      , dss_load_date
      , dss_create_time)
      SELECT  CONVERT(NVARCHAR(64),HashBytes('SHA2_256',
               COALESCE(CAST(load_instrumentdef_national.instrument AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST('lims80' AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST('lims80' AS VARCHAR(MAX)),'null')
               ),2) AS hk_h_analytical_instrument
           , load_instrumentdef_national.instrument AS instrument_no
           , 'lims80' AS instrument_no_bkcc
           , 'lims80' AS tenant_id
           , load_instrumentdef_national.certification_req AS certification_req
           , load_instrumentdef_national.service_status AS service_status
           , load_instrumentdef_national.instrument_type AS instrument_type
           , load_instrumentdef_national.instrument_model AS instrument_model
           , load_instrumentdef_national.serial_number AS serial_number
           , load_instrumentdef_national.description AS description
           , load_instrumentdef_national.location AS location
           , load_instrumentdef_national.calib_days AS calib_days
           , load_instrumentdef_national.calib_desc AS calib_desc
           , load_instrumentdef_national.last_calib AS last_calib
           , load_instrumentdef_national.next_calib AS next_calib
           , load_instrumentdef_national.service_days AS service_days
           , load_instrumentdef_national.service_desc AS service_desc
           , load_instrumentdef_national.last_service AS last_service
           , load_instrumentdef_national.next_service AS next_service
           , load_instrumentdef_national.capacity AS capacity
           , load_instrumentdef_national.capacity_samp_test AS capacity_samp_test
           , load_instrumentdef_national.instrument_cost AS instrument_cost
           , load_instrumentdef_national.lasttool AS lasttool
           , load_instrumentdef_national.lastuser AS lastuser
           , load_instrumentdef_national.lastdate AS lastdate
           , load_instrumentdef_national.computername AS computername
           , load_instrumentdef_national.datapath AS datapath
           , load_instrumentdef_national.raw_data_mode AS raw_data_mode
           , load_instrumentdef_national.analysis_location_code AS analysis_location_code
           , load_instrumentdef_national.tzcode AS tzcode
           , CONVERT(NVARCHAR(64),HashBytes('SHA2_256',
               COALESCE(CAST(load_instrumentdef_national.certification_req AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.service_status AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.instrument_type AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.instrument_model AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.serial_number AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.description AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.location AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.calib_days AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.calib_desc AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.last_calib AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.next_calib AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.service_days AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.service_desc AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.last_service AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.next_service AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.capacity AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.capacity_samp_test AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.instrument_cost AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.lasttool AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.lastuser AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.lastdate AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.computername AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.datapath AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.raw_data_mode AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.analysis_location_code AS VARCHAR(MAX)),'null') +'||'+
               COALESCE(CAST(load_instrumentdef_national.tzcode AS VARCHAR(MAX)),'null')
               ),2) AS dss_change_hash_analytical_instrument_mroc_national
           , load_instrumentdef_national.dss_record_source AS dss_record_source
           , load_instrumentdef_national.dss_load_date AS dss_load_date
           , @v_current_datetime AS dss_create_time
      FROM [TABLEOWNER].[load_instrumentdef_national] load_instrumentdef_national
      ;

      SELECT @v_insert_count = @@ROWCOUNT

    COMMIT

    --=====================================================
    -- All Done report the results
    --=====================================================
    SET @v_step = 400

    -- WsWrkTask(job,task,seq,insert,update,replace,delete,discard,reject,error)
    EXEC [METABASE].WsWrkTask @p_job_id, @p_task_id, @p_sequence,
     @v_insert_count,0,0,0,0,0,0

    SET @p_status = 1
    SET @p_return_msg = 'stage_analytical_instrument_national updated. '
      + CONVERT(VARCHAR,@v_insert_count) + ' new records.'

    RETURN 0

  END TRY
  BEGIN CATCH

    SET @p_status = -2
    SET @p_return_msg = SUBSTRING('update_stage_analyti_df7d8924 FAILED with error '
      + CONVERT(VARCHAR,ISNULL(ERROR_NUMBER(),0))
      + ' Step ' + CONVERT(VARCHAR,ISNULL(@v_step,0))
      + '. Error Msg: ' + ERROR_MESSAGE(),1,1023)

  END CATCH
  IF XACT_STATE() <> 0
  BEGIN
    ROLLBACK TRANSACTION
  END

  RETURN 0
